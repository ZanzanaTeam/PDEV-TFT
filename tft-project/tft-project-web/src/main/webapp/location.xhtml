<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html">

<h:head></h:head>
<body>
	<ui:composition template="/template.xhtml">
		<ui:define name="content">
			<style type="text/css">
#map {
	min-height: 450px;
}
</style>
			<div id="map">
				<p>Veuillez patienter pendant le chargement de la carte...</p>
			</div>
			<div id="panel"></div>
			<input type="hidden" id="lat" value="36.802318" />
			<input type="hidden" id="lng" value="10.152445" />
			<script type="text/javascript">
				var pos;
				var map;
				function handleLocationError(browserHasGeolocation, infoWindow, pos) {
				  infoWindow.setPosition(pos);
				  infoWindow.setContent(browserHasGeolocation ?
				                        'Error: The Geolocation service failed.' :
				                        'Error: Your browser doesn\'t support geolocation.');
				}

				function init(){
					console.log(pos.lat+","+pos.lng);
					var latPosB = parseFloat(document.getElementById("lat").value);
					var lngPosB = parseFloat(document.getElementById("lng").value); 
					var posB = {lat: latPosB , lng : lngPosB };

			        var request = {
			            origin      : pos,
			            destination : posB,
			            travelMode  : google.maps.DirectionsTravelMode.DRIVING // Mode de conduite
			        }
			        var directionsService = new google.maps.DirectionsService(); // Service de calcul d'itinéraire
			        directionsService.route(request, function(response, status){ // Envoie de la requête pour calculer le parcours
			            if(status == google.maps.DirectionsStatus.OK){
			                direction.setDirections(response); // Trace l'itinéraire sur la carte et les différentes étapes du parcours

							var service = new google.maps.DistanceMatrixService();
							service.getDistanceMatrix({
								origins: [pos],
								destinations: [posB],
								travelMode: google.maps.TravelMode.DRIVING,
							}, callback);

							function callback(response, status) {
								var distance = (response.rows[0].elements[0].distance.value/1000).toFixed(1);
								//$('#hidden_distance').val(distance);

								var marker = new google.maps.Marker({
									position : posB,
									map      : map,
									title    : "Paris"
									//icon     : "marker_lille.gif" // Chemin de l'image du marqueur pour surcharger celui par défaut
								});

								var contentMarker = [
								  '<div>',
									'<h6> Distance '+distance+' KM</h6>',
								  '</div>'
								].join('');

								var position_marker = new google.maps.LatLng(posB.lat, posB.lng);
								var infoWindow = new google.maps.InfoWindow({
									content  : contentMarker,
									position : position_marker,
									mapTypeId:google.maps.MapTypeId.ROADMAP
								});

								infoWindow.open(map,marker);
								
								$('html, body').animate({
									scrollTop: $("#map").offset().top - 40
								}, 'slow');
							}
			            }
			        });
					
				}
				$(document).ready(function(){
					panel    = document.getElementById('panel');
					
					map = new google.maps.Map(document.getElementById('map'), {
					    center: {lat: -34.397, lng: 150.644},
					    zoom: 30
					  });
					direction = new google.maps.DirectionsRenderer({
						map   : map,
						panel : panel // Dom element pour afficher les instructions d'itinéraire
					});
					  var infoWindow = new google.maps.InfoWindow({map: map});

					  // Try HTML5 geolocation.
					  if (navigator.geolocation) {
					    navigator.geolocation.getCurrentPosition(function(position) {
					      pos = {
					        lat: position.coords.latitude,
					        lng: position.coords.longitude
					      };
					      var geocoder = new google.maps.Geocoder;
					      geocoder.geocode({'location': pos}, function(results, status) {
					    	    if (status === google.maps.GeocoderStatus.OK) {
					    	      if (results[1]) {
					    	        map.setZoom(11);
					    	        var marker = new google.maps.Marker({
					    	          position: pos,
					    	          map: map
					    	        });
					    	        infoWindow.setContent(results[1].formatted_address);
					    	      } else {
					    	        window.alert('No results found');
					    	      }
					    	    } else {
					    	      window.alert('Geocoder failed due to: ' + status);
					    	    }
					    	  });
					      infoWindow.setPosition(pos);
					      map.setCenter(pos);
					      init();
					    }, function() {
					      handleLocationError(true, infoWindow, map.getCenter());
					    });
					  } else {
					    // Browser doesn't support Geolocation
					    handleLocationError(false, infoWindow, map.getCenter());
					  }
				});

    </script>
			<script
				src="https://maps.googleapis.com/maps/api/js?sensor=false&amp;key=AIzaSyDwt_7ayQf848CuPPCozGCst0JbinOmeOc&amp;language=fr&amp;libraries=places">
    </script>
		</ui:define>
	</ui:composition>
</body>
</html>